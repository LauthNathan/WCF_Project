//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCF_Client.proxy {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MSG", Namespace="http://schemas.datacontract.org/2004/07/WCF_Service")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(object[]))]
    public partial struct MSG : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string appVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object[] dataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string infoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string operationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string operationVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool statut_OpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string tokenAppField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string tokenUserField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string appVersion {
            get {
                return this.appVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.appVersionField, value) != true)) {
                    this.appVersionField = value;
                    this.RaisePropertyChanged("appVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object[] data {
            get {
                return this.dataField;
            }
            set {
                if ((object.ReferenceEquals(this.dataField, value) != true)) {
                    this.dataField = value;
                    this.RaisePropertyChanged("data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string info {
            get {
                return this.infoField;
            }
            set {
                if ((object.ReferenceEquals(this.infoField, value) != true)) {
                    this.infoField = value;
                    this.RaisePropertyChanged("info");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string operationName {
            get {
                return this.operationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.operationNameField, value) != true)) {
                    this.operationNameField = value;
                    this.RaisePropertyChanged("operationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string operationVersion {
            get {
                return this.operationVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.operationVersionField, value) != true)) {
                    this.operationVersionField = value;
                    this.RaisePropertyChanged("operationVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool statut_Op {
            get {
                return this.statut_OpField;
            }
            set {
                if ((this.statut_OpField.Equals(value) != true)) {
                    this.statut_OpField = value;
                    this.RaisePropertyChanged("statut_Op");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tokenApp {
            get {
                return this.tokenAppField;
            }
            set {
                if ((object.ReferenceEquals(this.tokenAppField, value) != true)) {
                    this.tokenAppField = value;
                    this.RaisePropertyChanged("tokenApp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tokenUser {
            get {
                return this.tokenUserField;
            }
            set {
                if ((object.ReferenceEquals(this.tokenUserField, value) != true)) {
                    this.tokenUserField = value;
                    this.RaisePropertyChanged("tokenUser");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://192.168.1.19", ConfigurationName="proxy.IComposantService")]
    public interface IComposantService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://192.168.1.19/IComposantService/m_service", ReplyAction="http://192.168.1.19/IComposantService/m_serviceResponse")]
        WCF_Client.proxy.MSG m_service(WCF_Client.proxy.MSG message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IComposantServiceChannel : WCF_Client.proxy.IComposantService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ComposantServiceClient : System.ServiceModel.ClientBase<WCF_Client.proxy.IComposantService>, WCF_Client.proxy.IComposantService {
        
        public ComposantServiceClient() {
        }
        
        public ComposantServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ComposantServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ComposantServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ComposantServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCF_Client.proxy.MSG m_service(WCF_Client.proxy.MSG message) {
            return base.Channel.m_service(message);
        }
    }
}
